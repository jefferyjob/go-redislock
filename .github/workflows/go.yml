name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  linux-build:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7.2
        ports:
          - 63790:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        go-version: [ '1.24' ]

    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
          cache: true
        id: go

      - name: GO Env
        run: |
          go version
          go env

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Lint
        run: |
          go vet $(go list ./...)
          go mod tidy
          if ! test -z "$(git status --porcelain)"; then
            echo "Please run 'go mod tidy'"
            exit 1
          fi

      - name: Build
        run: go build -v ./...

      # Test Unit
      - name: Test
        run: make test

      - name: Test and create coverage file
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{secrets.CODECOV_TOKEN}}

      # Test Analytics
      - name: Install dependencies
        run: |
          go install github.com/jstemmer/go-junit-report@latest
          go install gotest.tools/gotestsum@latest

      - name: Run tests and generate coverage report
        run: gotestsum --junitfile junit.xml

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
